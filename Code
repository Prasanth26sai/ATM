#include<stdio.h> 
#include<stdlib.h> 
struct poly 
{ 
  int c,p; 
  struct poly *next; 
}*newnode; 
struct poly *insert() 
{ 
  int n,i; 
  struct poly *firstnode=NULL; 
  struct poly *currentnode=NULL; 
  printf("Enter the number of terms:"); 
  scanf("%d",&n); 
  for(i=0;i<n;i++) 
  { 
    newnode=(struct poly*)malloc(sizeof(struct poly)); 
    newnode->next=NULL; 
    printf("Enter the coefficient and power of the given polynomial:"); 
    scanf("%d%d",&newnode->c,&newnode->p); 
    if(firstnode==NULL) 
    { 
      firstnode=newnode; 
      currentnode=newnode; 
    } 
    else 
    { 
      currentnode->next=newnode; 
      currentnode=newnode; 
    } 
  }   
  return firstnode; 
} 
void display(struct poly *temp) 
{ 
  while(temp->next!=NULL) 
  { 
    printf("%dX^%d+",temp->c,temp->p); 
    temp=temp->next; 
  } 
  printf("%d",temp->c); 
} 
struct poly *add(struct poly *p1,struct poly *p2) 
{ 
  struct poly *firstnode=NULL; 
  struct poly *currentnode=NULL; 
  while((p1!=NULL)&&(p2!=NULL)) 
  { 
    newnode=(struct poly*)malloc(sizeof(struct poly)); 
    newnode->next=NULL; 
    if(p1->p==p2->p) 
    { 
      newnode->p=p1->p; 
      newnode->c=p1->c+p2->c; 
      p1=p1->next; 
      p2=p2->next; 
    } 
    else if(p1->p>p2->p) 
    { 
      newnode->p=p1->p; 
      newnode->c=p1->c; 
      p1=p1->next; 
    } 
    else 
    { 
      newnode->p=p2->p; 
      newnode->c=p2->c; 
      p2=p2->next; 
    } 
    if(firstnode==NULL) 
    { 
      firstnode=newnode; 
      currentnode=newnode; 
    } 
    else 
    { 
      currentnode->next=newnode; 
      currentnode=newnode; 
    } 
  } 
  return firstnode; 
} 
 struct poly *sub(struct poly *p1,struct poly *p2) 
{ 
  struct poly *firstnode=NULL; 
  struct poly *currentnode=NULL; 
  while((p1!=NULL)&&(p2!=NULL)) 
  { 
    newnode=(struct poly*)malloc(sizeof(struct poly)); 
    newnode->next=NULL; 
    if(p1->p==p2->p) 
    { 
      newnode->p=p1->p; 
      newnode->c=p1->c-p2->c; 
      p1=p1->next; 
      p2=p2->next; 
    } 
    else if(p1->p>p2->p) 
    { 
      newnode->p=p1->p; 
      newnode->c=p1->c; 
      p1=p1->next; 
    } 
    else 
    { 
      newnode->p=p2->p; 
      newnode->c=p2->c; 
      p2=p2->next; 
    } 
    if(firstnode==NULL) 
    { 
      firstnode=newnode; 
      currentnode=newnode; 
    } 
    else 
    { 
      currentnode->next=newnode; 
      currentnode=newnode; 
    } 
  } 
    while((p1!=NULL)||(p2!=NULL)) 
  { 
    newnode=(struct poly*)malloc(sizeof(struct poly)); 
    newnode->next=NULL; 
    if(p1!=NULL) 
    { 
      newnode->c=p1->c; 
      newnode->p=p1->p; 
      p1=p1->next; 
    } 
    else 
    { 
      newnode->p=p2->p; 
      newnode->c=p2->c; 
      p2=p2->next; 
    } 
    if(firstnode==NULL) 
    { 
      firstnode=newnode; 
      currentnode=newnode; 
    } 
    else 
    { 
      currentnode->next=newnode; 
      currentnode=newnode; 
    } 
  } 
  return firstnode; 
} 
struct poly *mul(struct poly *p1,struct poly *p2) 
{ 
  struct poly *firstnode=NULL; 
  struct poly *currentnode=NULL; 
  while((p1!=NULL)&&(p2!=NULL)) 
  { 
    newnode=(struct poly*)malloc(sizeof(struct poly)); 
    newnode->next=NULL; 
    if(p1->p==p2->p) 
    { 
      newnode->p=p1->p*p2->p; 
      newnode->c=p1->c*p2->c; 
      p1=p1->next; 
      p2=p2->next; 
    } 
    else if(p1->p>p2->p) 
    { 
      newnode->p=p1->p; 
      newnode->c=p1->c; 
      p1=p1->next; 
    } 
    else 
    { 
      newnode->p=p2->p; 
      newnode->c=p2->c; 
      p2=p2->next; 
    } 
    if(firstnode==NULL) 
    { 
      firstnode=newnode; 
      currentnode=newnode; 
    } 
    else 
    { 
      currentnode->next=newnode; 
      currentnode=newnode; 
    } 
  } 
  return firstnode; 
} 
void main() 
{ 
  struct poly *p1,*p2,*res; 
  printf("\n First polynomial\n"); 
  p1=insert(); 
  display(p1); 
  printf("\n Second polynomial\n"); 
  p2=insert(); 
  display(p2); 
  printf("\n The resultant polynomial is:"); 
  res=add(p1,p2); 
  display(res); 
  printf("\n The resultant polynomial is:"); 
  res=sub(p1,p2); 
  display(res); 
  printf("\n The resultant
